// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v3.21.12
// source: proto/RosShimService.proto

package service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Secret struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Secret) Reset() {
	*x = Secret{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_RosShimService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Secret) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Secret) ProtoMessage() {}

func (x *Secret) ProtoReflect() protoreflect.Message {
	mi := &file_proto_RosShimService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Secret.ProtoReflect.Descriptor instead.
func (*Secret) Descriptor() ([]byte, []int) {
	return file_proto_RosShimService_proto_rawDescGZIP(), []int{0}
}

func (x *Secret) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ChildPids struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Pid int32  `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
}

func (x *ChildPids) Reset() {
	*x = ChildPids{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_RosShimService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChildPids) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChildPids) ProtoMessage() {}

func (x *ChildPids) ProtoReflect() protoreflect.Message {
	mi := &file_proto_RosShimService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChildPids.ProtoReflect.Descriptor instead.
func (*ChildPids) Descriptor() ([]byte, []int) {
	return file_proto_RosShimService_proto_rawDescGZIP(), []int{1}
}

func (x *ChildPids) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ChildPids) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

type ChildPidsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pids []*ChildPids `protobuf:"bytes,1,rep,name=Pids,proto3" json:"Pids,omitempty"`
}

func (x *ChildPidsResponse) Reset() {
	*x = ChildPidsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_RosShimService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChildPidsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChildPidsResponse) ProtoMessage() {}

func (x *ChildPidsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_RosShimService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChildPidsResponse.ProtoReflect.Descriptor instead.
func (*ChildPidsResponse) Descriptor() ([]byte, []int) {
	return file_proto_RosShimService_proto_rawDescGZIP(), []int{2}
}

func (x *ChildPidsResponse) GetPids() []*ChildPids {
	if x != nil {
		return x.Pids
	}
	return nil
}

type ChildAmount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pids int32 `protobuf:"varint,1,opt,name=pids,proto3" json:"pids,omitempty"`
}

func (x *ChildAmount) Reset() {
	*x = ChildAmount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_RosShimService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChildAmount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChildAmount) ProtoMessage() {}

func (x *ChildAmount) ProtoReflect() protoreflect.Message {
	mi := &file_proto_RosShimService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChildAmount.ProtoReflect.Descriptor instead.
func (*ChildAmount) Descriptor() ([]byte, []int) {
	return file_proto_RosShimService_proto_rawDescGZIP(), []int{3}
}

func (x *ChildAmount) GetPids() int32 {
	if x != nil {
		return x.Pids
	}
	return 0
}

type LaunchFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LaunchFileName string `protobuf:"bytes,1,opt,name=launchFileName,proto3" json:"launchFileName,omitempty"`
}

func (x *LaunchFile) Reset() {
	*x = LaunchFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_RosShimService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LaunchFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LaunchFile) ProtoMessage() {}

func (x *LaunchFile) ProtoReflect() protoreflect.Message {
	mi := &file_proto_RosShimService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LaunchFile.ProtoReflect.Descriptor instead.
func (*LaunchFile) Descriptor() ([]byte, []int) {
	return file_proto_RosShimService_proto_rawDescGZIP(), []int{4}
}

func (x *LaunchFile) GetLaunchFileName() string {
	if x != nil {
		return x.LaunchFileName
	}
	return ""
}

type StartParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GitUrl         string `protobuf:"bytes,1,opt,name=gitUrl,proto3" json:"gitUrl,omitempty"`
	GitBranch      string `protobuf:"bytes,2,opt,name=gitBranch,proto3" json:"gitBranch,omitempty"`
	Workpackage    string `protobuf:"bytes,3,opt,name=workpackage,proto3" json:"workpackage,omitempty"`
	RosProjectName string `protobuf:"bytes,4,opt,name=rosProjectName,proto3" json:"rosProjectName,omitempty"`
	LaunchFileName string `protobuf:"bytes,5,opt,name=launchFileName,proto3" json:"launchFileName,omitempty"`
	VenvRequired   bool   `protobuf:"varint,6,opt,name=venvRequired,proto3" json:"venvRequired,omitempty"`
}

func (x *StartParams) Reset() {
	*x = StartParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_RosShimService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartParams) ProtoMessage() {}

func (x *StartParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_RosShimService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartParams.ProtoReflect.Descriptor instead.
func (*StartParams) Descriptor() ([]byte, []int) {
	return file_proto_RosShimService_proto_rawDescGZIP(), []int{5}
}

func (x *StartParams) GetGitUrl() string {
	if x != nil {
		return x.GitUrl
	}
	return ""
}

func (x *StartParams) GetGitBranch() string {
	if x != nil {
		return x.GitBranch
	}
	return ""
}

func (x *StartParams) GetWorkpackage() string {
	if x != nil {
		return x.Workpackage
	}
	return ""
}

func (x *StartParams) GetRosProjectName() string {
	if x != nil {
		return x.RosProjectName
	}
	return ""
}

func (x *StartParams) GetLaunchFileName() string {
	if x != nil {
		return x.LaunchFileName
	}
	return ""
}

func (x *StartParams) GetVenvRequired() bool {
	if x != nil {
		return x.VenvRequired
	}
	return false
}

type StatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *StatusResponse) Reset() {
	*x = StatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_RosShimService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse) ProtoMessage() {}

func (x *StatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_RosShimService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse.ProtoReflect.Descriptor instead.
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return file_proto_RosShimService_proto_rawDescGZIP(), []int{6}
}

func (x *StatusResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StatusResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_RosShimService_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_proto_RosShimService_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_proto_RosShimService_proto_rawDescGZIP(), []int{7}
}

type HealthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Healthy       bool  `protobuf:"varint,1,opt,name=healthy,proto3" json:"healthy,omitempty"`
	UptimeSeconds int64 `protobuf:"varint,2,opt,name=uptime_seconds,json=uptimeSeconds,proto3" json:"uptime_seconds,omitempty"`
}

func (x *HealthResponse) Reset() {
	*x = HealthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_RosShimService_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthResponse) ProtoMessage() {}

func (x *HealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_RosShimService_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthResponse.ProtoReflect.Descriptor instead.
func (*HealthResponse) Descriptor() ([]byte, []int) {
	return file_proto_RosShimService_proto_rawDescGZIP(), []int{8}
}

func (x *HealthResponse) GetHealthy() bool {
	if x != nil {
		return x.Healthy
	}
	return false
}

func (x *HealthResponse) GetUptimeSeconds() int64 {
	if x != nil {
		return x.UptimeSeconds
	}
	return 0
}

type HealthResponseRosNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Healthy       bool   `protobuf:"varint,1,opt,name=healthy,proto3" json:"healthy,omitempty"`
	Launchfile    string `protobuf:"bytes,2,opt,name=launchfile,proto3" json:"launchfile,omitempty"`
	UptimeSeconds int64  `protobuf:"varint,3,opt,name=uptime_seconds,json=uptimeSeconds,proto3" json:"uptime_seconds,omitempty"`
}

func (x *HealthResponseRosNode) Reset() {
	*x = HealthResponseRosNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_RosShimService_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthResponseRosNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthResponseRosNode) ProtoMessage() {}

func (x *HealthResponseRosNode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_RosShimService_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthResponseRosNode.ProtoReflect.Descriptor instead.
func (*HealthResponseRosNode) Descriptor() ([]byte, []int) {
	return file_proto_RosShimService_proto_rawDescGZIP(), []int{9}
}

func (x *HealthResponseRosNode) GetHealthy() bool {
	if x != nil {
		return x.Healthy
	}
	return false
}

func (x *HealthResponseRosNode) GetLaunchfile() string {
	if x != nil {
		return x.Launchfile
	}
	return ""
}

func (x *HealthResponseRosNode) GetUptimeSeconds() int64 {
	if x != nil {
		return x.UptimeSeconds
	}
	return 0
}

type LogInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Launchfile string   `protobuf:"bytes,1,opt,name=launchfile,proto3" json:"launchfile,omitempty"`
	Message    []string `protobuf:"bytes,2,rep,name=message,proto3" json:"message,omitempty"`
}

func (x *LogInfo) Reset() {
	*x = LogInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_RosShimService_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogInfo) ProtoMessage() {}

func (x *LogInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_RosShimService_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogInfo.ProtoReflect.Descriptor instead.
func (*LogInfo) Descriptor() ([]byte, []int) {
	return file_proto_RosShimService_proto_rawDescGZIP(), []int{10}
}

func (x *LogInfo) GetLaunchfile() string {
	if x != nil {
		return x.Launchfile
	}
	return ""
}

func (x *LogInfo) GetMessage() []string {
	if x != nil {
		return x.Message
	}
	return nil
}

type HealthResponses struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HealthResponseRosNode []*HealthResponseRosNode `protobuf:"bytes,1,rep,name=healthResponseRosNode,proto3" json:"healthResponseRosNode,omitempty"`
}

func (x *HealthResponses) Reset() {
	*x = HealthResponses{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_RosShimService_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthResponses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthResponses) ProtoMessage() {}

func (x *HealthResponses) ProtoReflect() protoreflect.Message {
	mi := &file_proto_RosShimService_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthResponses.ProtoReflect.Descriptor instead.
func (*HealthResponses) Descriptor() ([]byte, []int) {
	return file_proto_RosShimService_proto_rawDescGZIP(), []int{11}
}

func (x *HealthResponses) GetHealthResponseRosNode() []*HealthResponseRosNode {
	if x != nil {
		return x.HealthResponseRosNode
	}
	return nil
}

type TaskStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId string `protobuf:"bytes,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
}

func (x *TaskStatus) Reset() {
	*x = TaskStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_RosShimService_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskStatus) ProtoMessage() {}

func (x *TaskStatus) ProtoReflect() protoreflect.Message {
	mi := &file_proto_RosShimService_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskStatus.ProtoReflect.Descriptor instead.
func (*TaskStatus) Descriptor() ([]byte, []int) {
	return file_proto_RosShimService_proto_rawDescGZIP(), []int{12}
}

func (x *TaskStatus) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type DataUtilizationSystem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CpuPercent  string `protobuf:"bytes,1,opt,name=cpuPercent,proto3" json:"cpuPercent,omitempty"`
	VmemPercent string `protobuf:"bytes,2,opt,name=vmemPercent,proto3" json:"vmemPercent,omitempty"`
}

func (x *DataUtilizationSystem) Reset() {
	*x = DataUtilizationSystem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_RosShimService_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataUtilizationSystem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataUtilizationSystem) ProtoMessage() {}

func (x *DataUtilizationSystem) ProtoReflect() protoreflect.Message {
	mi := &file_proto_RosShimService_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataUtilizationSystem.ProtoReflect.Descriptor instead.
func (*DataUtilizationSystem) Descriptor() ([]byte, []int) {
	return file_proto_RosShimService_proto_rawDescGZIP(), []int{13}
}

func (x *DataUtilizationSystem) GetCpuPercent() string {
	if x != nil {
		return x.CpuPercent
	}
	return ""
}

func (x *DataUtilizationSystem) GetVmemPercent() string {
	if x != nil {
		return x.VmemPercent
	}
	return ""
}

type DataUtilizationRosNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CpuPercent      string `protobuf:"bytes,1,opt,name=cpuPercent,proto3" json:"cpuPercent,omitempty"`
	CpuUsage        string `protobuf:"bytes,2,opt,name=cpuUsage,proto3" json:"cpuUsage,omitempty"`
	MemUsagePercent string `protobuf:"bytes,3,opt,name=memUsagePercent,proto3" json:"memUsagePercent,omitempty"`
}

func (x *DataUtilizationRosNode) Reset() {
	*x = DataUtilizationRosNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_RosShimService_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataUtilizationRosNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataUtilizationRosNode) ProtoMessage() {}

func (x *DataUtilizationRosNode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_RosShimService_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataUtilizationRosNode.ProtoReflect.Descriptor instead.
func (*DataUtilizationRosNode) Descriptor() ([]byte, []int) {
	return file_proto_RosShimService_proto_rawDescGZIP(), []int{14}
}

func (x *DataUtilizationRosNode) GetCpuPercent() string {
	if x != nil {
		return x.CpuPercent
	}
	return ""
}

func (x *DataUtilizationRosNode) GetCpuUsage() string {
	if x != nil {
		return x.CpuUsage
	}
	return ""
}

func (x *DataUtilizationRosNode) GetMemUsagePercent() string {
	if x != nil {
		return x.MemUsagePercent
	}
	return ""
}

type PidLaunchfileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pids       string `protobuf:"bytes,1,opt,name=pids,proto3" json:"pids,omitempty"`
	Launchfile string `protobuf:"bytes,2,opt,name=launchfile,proto3" json:"launchfile,omitempty"`
}

func (x *PidLaunchfileInfo) Reset() {
	*x = PidLaunchfileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_RosShimService_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PidLaunchfileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PidLaunchfileInfo) ProtoMessage() {}

func (x *PidLaunchfileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_RosShimService_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PidLaunchfileInfo.ProtoReflect.Descriptor instead.
func (*PidLaunchfileInfo) Descriptor() ([]byte, []int) {
	return file_proto_RosShimService_proto_rawDescGZIP(), []int{15}
}

func (x *PidLaunchfileInfo) GetPids() string {
	if x != nil {
		return x.Pids
	}
	return ""
}

func (x *PidLaunchfileInfo) GetLaunchfile() string {
	if x != nil {
		return x.Launchfile
	}
	return ""
}

type CheckPids struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PidLaunchfileInfo []*PidLaunchfileInfo `protobuf:"bytes,1,rep,name=pidLaunchfileInfo,proto3" json:"pidLaunchfileInfo,omitempty"`
}

func (x *CheckPids) Reset() {
	*x = CheckPids{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_RosShimService_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckPids) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckPids) ProtoMessage() {}

func (x *CheckPids) ProtoReflect() protoreflect.Message {
	mi := &file_proto_RosShimService_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckPids.ProtoReflect.Descriptor instead.
func (*CheckPids) Descriptor() ([]byte, []int) {
	return file_proto_RosShimService_proto_rawDescGZIP(), []int{16}
}

func (x *CheckPids) GetPidLaunchfileInfo() []*PidLaunchfileInfo {
	if x != nil {
		return x.PidLaunchfileInfo
	}
	return nil
}

type Pidstates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pid   string `protobuf:"bytes,1,opt,name=pid,proto3" json:"pid,omitempty"`
	State string `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *Pidstates) Reset() {
	*x = Pidstates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_RosShimService_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pidstates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pidstates) ProtoMessage() {}

func (x *Pidstates) ProtoReflect() protoreflect.Message {
	mi := &file_proto_RosShimService_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pidstates.ProtoReflect.Descriptor instead.
func (*Pidstates) Descriptor() ([]byte, []int) {
	return file_proto_RosShimService_proto_rawDescGZIP(), []int{17}
}

func (x *Pidstates) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *Pidstates) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type PidVerifications struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pidstates []*Pidstates `protobuf:"bytes,1,rep,name=pidstates,proto3" json:"pidstates,omitempty"`
}

func (x *PidVerifications) Reset() {
	*x = PidVerifications{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_RosShimService_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PidVerifications) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PidVerifications) ProtoMessage() {}

func (x *PidVerifications) ProtoReflect() protoreflect.Message {
	mi := &file_proto_RosShimService_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PidVerifications.ProtoReflect.Descriptor instead.
func (*PidVerifications) Descriptor() ([]byte, []int) {
	return file_proto_RosShimService_proto_rawDescGZIP(), []int{18}
}

func (x *PidVerifications) GetPidstates() []*Pidstates {
	if x != nil {
		return x.Pidstates
	}
	return nil
}

var File_proto_RosShimService_proto protoreflect.FileDescriptor

var file_proto_RosShimService_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x52, 0x6f, 0x73, 0x53, 0x68, 0x69, 0x6d, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x22, 0x0a, 0x06, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x2f, 0x0a, 0x09, 0x43, 0x68, 0x69,
	0x6c, 0x64, 0x50, 0x69, 0x64, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x70, 0x69, 0x64, 0x22, 0x3b, 0x0a, 0x11, 0x43, 0x68,
	0x69, 0x6c, 0x64, 0x50, 0x69, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x26, 0x0a, 0x04, 0x50, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x50, 0x69, 0x64,
	0x73, 0x52, 0x04, 0x50, 0x69, 0x64, 0x73, 0x22, 0x21, 0x0a, 0x0b, 0x43, 0x68, 0x69, 0x6c, 0x64,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x69, 0x64, 0x73, 0x22, 0x34, 0x0a, 0x0a, 0x4c, 0x61,
	0x75, 0x6e, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x61, 0x75, 0x6e,
	0x63, 0x68, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0xd9, 0x01, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x67, 0x69, 0x74, 0x55, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x67, 0x69, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x69, 0x74, 0x42,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x69, 0x74,
	0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72,
	0x6b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x6f, 0x73, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x72, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68,
	0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x76, 0x65, 0x6e, 0x76,
	0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c,
	0x76, 0x65, 0x6e, 0x76, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22, 0x44, 0x0a, 0x0e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x51, 0x0a, 0x0e, 0x48,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x75, 0x70, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0d, 0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x78,
	0x0a, 0x15, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x6f, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x66, 0x69, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x66, 0x69, 0x6c,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x75, 0x70, 0x74, 0x69, 0x6d,
	0x65, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x43, 0x0a, 0x07, 0x4c, 0x6f, 0x67, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x66, 0x69, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x66,
	0x69, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x67, 0x0a,
	0x0f, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73,
	0x12, 0x54, 0x0a, 0x15, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x6f, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x6f, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x52,
	0x15, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x6f, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x22, 0x24, 0x0a, 0x0a, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x59, 0x0a, 0x15,
	0x44, 0x61, 0x74, 0x61, 0x55, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x70, 0x75, 0x50, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x70, 0x75, 0x50, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x6d, 0x65, 0x6d, 0x50, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x6d, 0x65, 0x6d,
	0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x22, 0x7e, 0x0a, 0x16, 0x44, 0x61, 0x74, 0x61, 0x55,
	0x74, 0x69, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x73, 0x4e, 0x6f, 0x64,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x70, 0x75, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x70, 0x75, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x70, 0x75, 0x55, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x70, 0x75, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x28, 0x0a,
	0x0f, 0x6d, 0x65, 0x6d, 0x55, 0x73, 0x61, 0x67, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6d, 0x65, 0x6d, 0x55, 0x73, 0x61, 0x67, 0x65,
	0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x22, 0x47, 0x0a, 0x11, 0x50, 0x69, 0x64, 0x4c, 0x61,
	0x75, 0x6e, 0x63, 0x68, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x69, 0x64, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x66, 0x69, 0x6c, 0x65,
	0x22, 0x55, 0x0a, 0x09, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x69, 0x64, 0x73, 0x12, 0x48, 0x0a,
	0x11, 0x70, 0x69, 0x64, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x50, 0x69, 0x64, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x66, 0x69, 0x6c, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x11, 0x70, 0x69, 0x64, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x66,
	0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x33, 0x0a, 0x09, 0x50, 0x69, 0x64, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x44, 0x0a, 0x10,
	0x50, 0x69, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x30, 0x0a, 0x09, 0x70, 0x69, 0x64, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x69,
	0x64, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x52, 0x09, 0x70, 0x69, 0x64, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x73, 0x32, 0xb2, 0x08, 0x0a, 0x0e, 0x52, 0x6f, 0x73, 0x53, 0x68, 0x69, 0x6d, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x73,
	0x12, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x61, 0x75, 0x6e, 0x63,
	0x68, 0x46, 0x69, 0x6c, 0x65, 0x1a, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x39, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x66, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x73, 0x12, 0x0e, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x14, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x50, 0x69,
	0x64, 0x73, 0x12, 0x0e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x68, 0x69,
	0x6c, 0x64, 0x50, 0x69, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d,
	0x0a, 0x0c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x14,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a,
	0x0b, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x6f, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x13, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x46, 0x69, 0x6c,
	0x65, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0e, 0x52, 0x65,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x14, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0b, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x0e, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x12, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x52, 0x6f, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x65, 0x1a, 0x17,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x13, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x6f, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x0e,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x18,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x12, 0x3f, 0x0a, 0x0f, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x13, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x08, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x0f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x35, 0x0a, 0x0a, 0x44, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x0e, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x17, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x52, 0x6f, 0x73, 0x32, 0x53, 0x68, 0x69, 0x6d, 0x12, 0x0f, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x55, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1e, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x55, 0x74, 0x69, 0x6c, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x4d, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x52, 0x6f, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x55, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c,
	0x61, 0x75, 0x6e, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x65, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x55, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x45, 0x0a, 0x14, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x50, 0x69, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x50, 0x69, 0x64, 0x73, 0x1a, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x50, 0x69, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x34, 0x0a, 0x08, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x12, 0x0f, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x1a, 0x17,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x15, 0x5a, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_RosShimService_proto_rawDescOnce sync.Once
	file_proto_RosShimService_proto_rawDescData = file_proto_RosShimService_proto_rawDesc
)

func file_proto_RosShimService_proto_rawDescGZIP() []byte {
	file_proto_RosShimService_proto_rawDescOnce.Do(func() {
		file_proto_RosShimService_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_RosShimService_proto_rawDescData)
	})
	return file_proto_RosShimService_proto_rawDescData
}

var file_proto_RosShimService_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_proto_RosShimService_proto_goTypes = []interface{}{
	(*Secret)(nil),                 // 0: service.Secret
	(*ChildPids)(nil),              // 1: service.ChildPids
	(*ChildPidsResponse)(nil),      // 2: service.ChildPidsResponse
	(*ChildAmount)(nil),            // 3: service.ChildAmount
	(*LaunchFile)(nil),             // 4: service.LaunchFile
	(*StartParams)(nil),            // 5: service.StartParams
	(*StatusResponse)(nil),         // 6: service.StatusResponse
	(*Empty)(nil),                  // 7: service.Empty
	(*HealthResponse)(nil),         // 8: service.HealthResponse
	(*HealthResponseRosNode)(nil),  // 9: service.HealthResponseRosNode
	(*LogInfo)(nil),                // 10: service.LogInfo
	(*HealthResponses)(nil),        // 11: service.HealthResponses
	(*TaskStatus)(nil),             // 12: service.TaskStatus
	(*DataUtilizationSystem)(nil),  // 13: service.DataUtilizationSystem
	(*DataUtilizationRosNode)(nil), // 14: service.DataUtilizationRosNode
	(*PidLaunchfileInfo)(nil),      // 15: service.PidLaunchfileInfo
	(*CheckPids)(nil),              // 16: service.CheckPids
	(*Pidstates)(nil),              // 17: service.Pidstates
	(*PidVerifications)(nil),       // 18: service.PidVerifications
}
var file_proto_RosShimService_proto_depIdxs = []int32{
	1,  // 0: service.ChildPidsResponse.Pids:type_name -> service.ChildPids
	9,  // 1: service.HealthResponses.healthResponseRosNode:type_name -> service.HealthResponseRosNode
	15, // 2: service.CheckPids.pidLaunchfileInfo:type_name -> service.PidLaunchfileInfo
	17, // 3: service.PidVerifications.pidstates:type_name -> service.Pidstates
	4,  // 4: service.RosShimService.GetLogs:input_type -> service.LaunchFile
	7,  // 5: service.RosShimService.GetAmountOfChilds:input_type -> service.Empty
	7,  // 6: service.RosShimService.GetChildPids:input_type -> service.Empty
	5,  // 7: service.RosShimService.StartService:input_type -> service.StartParams
	4,  // 8: service.RosShimService.StopRosNode:input_type -> service.LaunchFile
	5,  // 9: service.RosShimService.RestartService:input_type -> service.StartParams
	7,  // 10: service.RosShimService.CheckHealth:input_type -> service.Empty
	4,  // 11: service.RosShimService.CheckHealthRosNode:input_type -> service.LaunchFile
	7,  // 12: service.RosShimService.CheckHealthRosNodes:input_type -> service.Empty
	12, // 13: service.RosShimService.CheckTaskStatus:input_type -> service.TaskStatus
	0,  // 14: service.RosShimService.Register:input_type -> service.Secret
	7,  // 15: service.RosShimService.DeRegister:input_type -> service.Empty
	0,  // 16: service.RosShimService.RestartRos2Shim:input_type -> service.Secret
	7,  // 17: service.RosShimService.GetSystemUtilization:input_type -> service.Empty
	4,  // 18: service.RosShimService.GetRosNodeUtilization:input_type -> service.LaunchFile
	16, // 19: service.RosShimService.CheckPidVerification:input_type -> service.CheckPids
	0,  // 20: service.RosShimService.Shutdown:input_type -> service.Secret
	10, // 21: service.RosShimService.GetLogs:output_type -> service.LogInfo
	3,  // 22: service.RosShimService.GetAmountOfChilds:output_type -> service.ChildAmount
	2,  // 23: service.RosShimService.GetChildPids:output_type -> service.ChildPidsResponse
	6,  // 24: service.RosShimService.StartService:output_type -> service.StatusResponse
	6,  // 25: service.RosShimService.StopRosNode:output_type -> service.StatusResponse
	6,  // 26: service.RosShimService.RestartService:output_type -> service.StatusResponse
	8,  // 27: service.RosShimService.CheckHealth:output_type -> service.HealthResponse
	8,  // 28: service.RosShimService.CheckHealthRosNode:output_type -> service.HealthResponse
	11, // 29: service.RosShimService.CheckHealthRosNodes:output_type -> service.HealthResponses
	6,  // 30: service.RosShimService.CheckTaskStatus:output_type -> service.StatusResponse
	6,  // 31: service.RosShimService.Register:output_type -> service.StatusResponse
	6,  // 32: service.RosShimService.DeRegister:output_type -> service.StatusResponse
	6,  // 33: service.RosShimService.RestartRos2Shim:output_type -> service.StatusResponse
	13, // 34: service.RosShimService.GetSystemUtilization:output_type -> service.DataUtilizationSystem
	14, // 35: service.RosShimService.GetRosNodeUtilization:output_type -> service.DataUtilizationRosNode
	18, // 36: service.RosShimService.CheckPidVerification:output_type -> service.PidVerifications
	6,  // 37: service.RosShimService.Shutdown:output_type -> service.StatusResponse
	21, // [21:38] is the sub-list for method output_type
	4,  // [4:21] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_proto_RosShimService_proto_init() }
func file_proto_RosShimService_proto_init() {
	if File_proto_RosShimService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_RosShimService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Secret); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_RosShimService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChildPids); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_RosShimService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChildPidsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_RosShimService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChildAmount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_RosShimService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LaunchFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_RosShimService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_RosShimService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_RosShimService_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_RosShimService_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_RosShimService_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthResponseRosNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_RosShimService_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_RosShimService_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthResponses); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_RosShimService_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_RosShimService_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataUtilizationSystem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_RosShimService_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataUtilizationRosNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_RosShimService_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PidLaunchfileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_RosShimService_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckPids); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_RosShimService_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pidstates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_RosShimService_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PidVerifications); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_RosShimService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_RosShimService_proto_goTypes,
		DependencyIndexes: file_proto_RosShimService_proto_depIdxs,
		MessageInfos:      file_proto_RosShimService_proto_msgTypes,
	}.Build()
	File_proto_RosShimService_proto = out.File
	file_proto_RosShimService_proto_rawDesc = nil
	file_proto_RosShimService_proto_goTypes = nil
	file_proto_RosShimService_proto_depIdxs = nil
}
